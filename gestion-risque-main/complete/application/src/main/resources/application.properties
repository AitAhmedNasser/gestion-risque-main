service.message=Hello, World
server.port= 8082
spring.application.name=Authentification-Service

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
# spring.datasource.url = jdbc:mysql://localhost:3306/auth_db?useSSL=false
spring.datasource.url = jdbc:postgresql://localhost:5432/GestionRisque

# Username and password
spring.datasource.username = postgres
spring.datasource.password = sa

spring.sql.init.mode=always

# spring.datasource.schema=classpath:/schema.sql
spring.sql.init.continue-on-error=true

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.jackson.serialization.write-dates-as-timestamps: false
spring.jackson.date-format=yyyy/MM/dd
